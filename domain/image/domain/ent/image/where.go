// Code generated by ent, DO NOT EDIT.

package image

import (
	"clove-api/domain/image/domain/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Image {
	return predicate.Image(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Image {
	return predicate.Image(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Image {
	return predicate.Image(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Image {
	return predicate.Image(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Image {
	return predicate.Image(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Image {
	return predicate.Image(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Image {
	return predicate.Image(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Image {
	return predicate.Image(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Image {
	return predicate.Image(sql.FieldLTE(FieldID, id))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.Image {
	return predicate.Image(sql.FieldEQ(FieldName, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.Image {
	return predicate.Image(sql.FieldEQ(FieldDescription, v))
}

// FileName applies equality check predicate on the "fileName" field. It's identical to FileNameEQ.
func FileName(v string) predicate.Image {
	return predicate.Image(sql.FieldEQ(FieldFileName, v))
}

// URL applies equality check predicate on the "url" field. It's identical to URLEQ.
func URL(v string) predicate.Image {
	return predicate.Image(sql.FieldEQ(FieldURL, v))
}

// Size applies equality check predicate on the "size" field. It's identical to SizeEQ.
func Size(v string) predicate.Image {
	return predicate.Image(sql.FieldEQ(FieldSize, v))
}

// Instance applies equality check predicate on the "instance" field. It's identical to InstanceEQ.
func Instance(v []byte) predicate.Image {
	return predicate.Image(sql.FieldEQ(FieldInstance, v))
}

// CreatedAt applies equality check predicate on the "createdAt" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Image {
	return predicate.Image(sql.FieldEQ(FieldCreatedAt, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.Image {
	return predicate.Image(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.Image {
	return predicate.Image(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.Image {
	return predicate.Image(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.Image {
	return predicate.Image(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.Image {
	return predicate.Image(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.Image {
	return predicate.Image(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.Image {
	return predicate.Image(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.Image {
	return predicate.Image(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.Image {
	return predicate.Image(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.Image {
	return predicate.Image(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.Image {
	return predicate.Image(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.Image {
	return predicate.Image(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.Image {
	return predicate.Image(sql.FieldContainsFold(FieldName, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.Image {
	return predicate.Image(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.Image {
	return predicate.Image(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.Image {
	return predicate.Image(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.Image {
	return predicate.Image(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.Image {
	return predicate.Image(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.Image {
	return predicate.Image(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.Image {
	return predicate.Image(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.Image {
	return predicate.Image(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.Image {
	return predicate.Image(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.Image {
	return predicate.Image(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.Image {
	return predicate.Image(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.Image {
	return predicate.Image(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.Image {
	return predicate.Image(sql.FieldContainsFold(FieldDescription, v))
}

// FileNameEQ applies the EQ predicate on the "fileName" field.
func FileNameEQ(v string) predicate.Image {
	return predicate.Image(sql.FieldEQ(FieldFileName, v))
}

// FileNameNEQ applies the NEQ predicate on the "fileName" field.
func FileNameNEQ(v string) predicate.Image {
	return predicate.Image(sql.FieldNEQ(FieldFileName, v))
}

// FileNameIn applies the In predicate on the "fileName" field.
func FileNameIn(vs ...string) predicate.Image {
	return predicate.Image(sql.FieldIn(FieldFileName, vs...))
}

// FileNameNotIn applies the NotIn predicate on the "fileName" field.
func FileNameNotIn(vs ...string) predicate.Image {
	return predicate.Image(sql.FieldNotIn(FieldFileName, vs...))
}

// FileNameGT applies the GT predicate on the "fileName" field.
func FileNameGT(v string) predicate.Image {
	return predicate.Image(sql.FieldGT(FieldFileName, v))
}

// FileNameGTE applies the GTE predicate on the "fileName" field.
func FileNameGTE(v string) predicate.Image {
	return predicate.Image(sql.FieldGTE(FieldFileName, v))
}

// FileNameLT applies the LT predicate on the "fileName" field.
func FileNameLT(v string) predicate.Image {
	return predicate.Image(sql.FieldLT(FieldFileName, v))
}

// FileNameLTE applies the LTE predicate on the "fileName" field.
func FileNameLTE(v string) predicate.Image {
	return predicate.Image(sql.FieldLTE(FieldFileName, v))
}

// FileNameContains applies the Contains predicate on the "fileName" field.
func FileNameContains(v string) predicate.Image {
	return predicate.Image(sql.FieldContains(FieldFileName, v))
}

// FileNameHasPrefix applies the HasPrefix predicate on the "fileName" field.
func FileNameHasPrefix(v string) predicate.Image {
	return predicate.Image(sql.FieldHasPrefix(FieldFileName, v))
}

// FileNameHasSuffix applies the HasSuffix predicate on the "fileName" field.
func FileNameHasSuffix(v string) predicate.Image {
	return predicate.Image(sql.FieldHasSuffix(FieldFileName, v))
}

// FileNameEqualFold applies the EqualFold predicate on the "fileName" field.
func FileNameEqualFold(v string) predicate.Image {
	return predicate.Image(sql.FieldEqualFold(FieldFileName, v))
}

// FileNameContainsFold applies the ContainsFold predicate on the "fileName" field.
func FileNameContainsFold(v string) predicate.Image {
	return predicate.Image(sql.FieldContainsFold(FieldFileName, v))
}

// URLEQ applies the EQ predicate on the "url" field.
func URLEQ(v string) predicate.Image {
	return predicate.Image(sql.FieldEQ(FieldURL, v))
}

// URLNEQ applies the NEQ predicate on the "url" field.
func URLNEQ(v string) predicate.Image {
	return predicate.Image(sql.FieldNEQ(FieldURL, v))
}

// URLIn applies the In predicate on the "url" field.
func URLIn(vs ...string) predicate.Image {
	return predicate.Image(sql.FieldIn(FieldURL, vs...))
}

// URLNotIn applies the NotIn predicate on the "url" field.
func URLNotIn(vs ...string) predicate.Image {
	return predicate.Image(sql.FieldNotIn(FieldURL, vs...))
}

// URLGT applies the GT predicate on the "url" field.
func URLGT(v string) predicate.Image {
	return predicate.Image(sql.FieldGT(FieldURL, v))
}

// URLGTE applies the GTE predicate on the "url" field.
func URLGTE(v string) predicate.Image {
	return predicate.Image(sql.FieldGTE(FieldURL, v))
}

// URLLT applies the LT predicate on the "url" field.
func URLLT(v string) predicate.Image {
	return predicate.Image(sql.FieldLT(FieldURL, v))
}

// URLLTE applies the LTE predicate on the "url" field.
func URLLTE(v string) predicate.Image {
	return predicate.Image(sql.FieldLTE(FieldURL, v))
}

// URLContains applies the Contains predicate on the "url" field.
func URLContains(v string) predicate.Image {
	return predicate.Image(sql.FieldContains(FieldURL, v))
}

// URLHasPrefix applies the HasPrefix predicate on the "url" field.
func URLHasPrefix(v string) predicate.Image {
	return predicate.Image(sql.FieldHasPrefix(FieldURL, v))
}

// URLHasSuffix applies the HasSuffix predicate on the "url" field.
func URLHasSuffix(v string) predicate.Image {
	return predicate.Image(sql.FieldHasSuffix(FieldURL, v))
}

// URLEqualFold applies the EqualFold predicate on the "url" field.
func URLEqualFold(v string) predicate.Image {
	return predicate.Image(sql.FieldEqualFold(FieldURL, v))
}

// URLContainsFold applies the ContainsFold predicate on the "url" field.
func URLContainsFold(v string) predicate.Image {
	return predicate.Image(sql.FieldContainsFold(FieldURL, v))
}

// SizeEQ applies the EQ predicate on the "size" field.
func SizeEQ(v string) predicate.Image {
	return predicate.Image(sql.FieldEQ(FieldSize, v))
}

// SizeNEQ applies the NEQ predicate on the "size" field.
func SizeNEQ(v string) predicate.Image {
	return predicate.Image(sql.FieldNEQ(FieldSize, v))
}

// SizeIn applies the In predicate on the "size" field.
func SizeIn(vs ...string) predicate.Image {
	return predicate.Image(sql.FieldIn(FieldSize, vs...))
}

// SizeNotIn applies the NotIn predicate on the "size" field.
func SizeNotIn(vs ...string) predicate.Image {
	return predicate.Image(sql.FieldNotIn(FieldSize, vs...))
}

// SizeGT applies the GT predicate on the "size" field.
func SizeGT(v string) predicate.Image {
	return predicate.Image(sql.FieldGT(FieldSize, v))
}

// SizeGTE applies the GTE predicate on the "size" field.
func SizeGTE(v string) predicate.Image {
	return predicate.Image(sql.FieldGTE(FieldSize, v))
}

// SizeLT applies the LT predicate on the "size" field.
func SizeLT(v string) predicate.Image {
	return predicate.Image(sql.FieldLT(FieldSize, v))
}

// SizeLTE applies the LTE predicate on the "size" field.
func SizeLTE(v string) predicate.Image {
	return predicate.Image(sql.FieldLTE(FieldSize, v))
}

// SizeContains applies the Contains predicate on the "size" field.
func SizeContains(v string) predicate.Image {
	return predicate.Image(sql.FieldContains(FieldSize, v))
}

// SizeHasPrefix applies the HasPrefix predicate on the "size" field.
func SizeHasPrefix(v string) predicate.Image {
	return predicate.Image(sql.FieldHasPrefix(FieldSize, v))
}

// SizeHasSuffix applies the HasSuffix predicate on the "size" field.
func SizeHasSuffix(v string) predicate.Image {
	return predicate.Image(sql.FieldHasSuffix(FieldSize, v))
}

// SizeEqualFold applies the EqualFold predicate on the "size" field.
func SizeEqualFold(v string) predicate.Image {
	return predicate.Image(sql.FieldEqualFold(FieldSize, v))
}

// SizeContainsFold applies the ContainsFold predicate on the "size" field.
func SizeContainsFold(v string) predicate.Image {
	return predicate.Image(sql.FieldContainsFold(FieldSize, v))
}

// InstanceEQ applies the EQ predicate on the "instance" field.
func InstanceEQ(v []byte) predicate.Image {
	return predicate.Image(sql.FieldEQ(FieldInstance, v))
}

// InstanceNEQ applies the NEQ predicate on the "instance" field.
func InstanceNEQ(v []byte) predicate.Image {
	return predicate.Image(sql.FieldNEQ(FieldInstance, v))
}

// InstanceIn applies the In predicate on the "instance" field.
func InstanceIn(vs ...[]byte) predicate.Image {
	return predicate.Image(sql.FieldIn(FieldInstance, vs...))
}

// InstanceNotIn applies the NotIn predicate on the "instance" field.
func InstanceNotIn(vs ...[]byte) predicate.Image {
	return predicate.Image(sql.FieldNotIn(FieldInstance, vs...))
}

// InstanceGT applies the GT predicate on the "instance" field.
func InstanceGT(v []byte) predicate.Image {
	return predicate.Image(sql.FieldGT(FieldInstance, v))
}

// InstanceGTE applies the GTE predicate on the "instance" field.
func InstanceGTE(v []byte) predicate.Image {
	return predicate.Image(sql.FieldGTE(FieldInstance, v))
}

// InstanceLT applies the LT predicate on the "instance" field.
func InstanceLT(v []byte) predicate.Image {
	return predicate.Image(sql.FieldLT(FieldInstance, v))
}

// InstanceLTE applies the LTE predicate on the "instance" field.
func InstanceLTE(v []byte) predicate.Image {
	return predicate.Image(sql.FieldLTE(FieldInstance, v))
}

// CreatedAtEQ applies the EQ predicate on the "createdAt" field.
func CreatedAtEQ(v time.Time) predicate.Image {
	return predicate.Image(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "createdAt" field.
func CreatedAtNEQ(v time.Time) predicate.Image {
	return predicate.Image(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "createdAt" field.
func CreatedAtIn(vs ...time.Time) predicate.Image {
	return predicate.Image(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "createdAt" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Image {
	return predicate.Image(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "createdAt" field.
func CreatedAtGT(v time.Time) predicate.Image {
	return predicate.Image(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "createdAt" field.
func CreatedAtGTE(v time.Time) predicate.Image {
	return predicate.Image(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "createdAt" field.
func CreatedAtLT(v time.Time) predicate.Image {
	return predicate.Image(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "createdAt" field.
func CreatedAtLTE(v time.Time) predicate.Image {
	return predicate.Image(sql.FieldLTE(FieldCreatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Image) predicate.Image {
	return predicate.Image(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Image) predicate.Image {
	return predicate.Image(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Image) predicate.Image {
	return predicate.Image(sql.NotPredicates(p))
}
